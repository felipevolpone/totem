//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
           &kp Q               &kp W           &kp E  &kp R             &kp T           &kp Y      &kp U             &kp I          &kp O    &kp P
           &mt LEFT_COMMAND A  &mt LEFT_ALT S  &kp D  &mt LEFT_SHIFT F  &kp G           &kp H      &mt LEFT_SHIFT J  &kp K          &kp L    &kp SEMI
&kp LCTRL  &kp Z               &kp X           &kp C  &kp V             &kp B           &kp N      &kp M             &kp COMMA      &kp DOT  &kp FSLH  &kp APOS
                                               &mo 6  &lt 1 SPACE       &lt 3 ESCAPE    &kp ENTER  &lt 2 BACKSPACE   &kp RIGHT_ALT
            >;
        };

        sym_func {
            bindings = <
           &kp LS(TAB)  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp MINUS  &kp PLUS          &none     &kp LG(LEFT)     &kp LG(RIGHT)  &none      &none
           &kp TAB      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp ENTER  &kp BSLH          &kp LEFT  &kp DOWN_ARROW   &kp UP_ARROW   &kp RIGHT  &none
&kp GRAVE  &none        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none      &kp UNDERSCORE    &none     &none            &none          &none      &none  &none
                                              &trans                 &trans     &trans            &none     &kp RIGHT_SHIFT  &none
            >;
        };

        device {
            bindings = <
       &none  &kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)    &none  &none  &none  &none  &none
       &none  &kp C_VOLUME_DOWN     &kp K_MUTE            &kp C_VOLUME_UP     &none                  &none  &none  &none  &none  &none
&none  &none  &none                 &kp C_PLAY_PAUSE      &none               &none                  &none  &none  &none  &none  &none  &none
                                    &none                 &none               &none                  &none  &none  &none
            >;
        };

        extra1 { status = "reserved"; };

        extra2 { status = "reserved"; };

        extra3 { status = "reserved"; };

        numbers {
            bindings = <
        &trans  &trans  &trans  &trans  &trans    &trans  &kp N7        &kp N8        &kp N9        &trans
        &trans  &trans  &trans  &trans  &trans    &kp N0  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans        &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        device {
            if-layers = <1 1>;
            then-layer = <2>;
        };
    };
};
