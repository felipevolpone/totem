#include "zmk-helpers/key-labels/totem.h"
#include <zmk-helpers/helper.h> // Requires zmk-helpers module.

#define QWERTY 0
#define COLEMAK 1
#define SYMBOLS 2
#define DEVICE 3
#define NUMBERS 4
#define MOUSE 5
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4
#define KEYS_T LH2 LH1 LH0 RH0 RH1 RH2 // Thumbs on 36+ keys.

#include "includes/behav_home_row_mods.dtsi"
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include "mouse.dtsi"

#define XXX &none
#define ___ &trans
#define QUICK_TAP_MS 175

&lt {
    tapping-term-ms = <200>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    global-quick-tap;
    flavor = "balanced";
};

#include "combos.dtsi" // Must be sourced after HRM-combo hack.

/ {
    combos {
        compatible = "zmk,combos";

        shortcat {
            bindings = <&kp LG(LA(LS(S)))>;
            key-positions = <33 36>;
        };

        tmux-next-window {
            bindings = <&tmux_next_window>;
            key-positions = <17 18>;
        };

        tmux-prev-window {
            bindings = <&tmux_previous_window>;
            key-positions = <17 16>;
        };

        tmux-new-window {
            bindings = <&tmux_new_window>;
            key-positions = <6 7>;
        };
    };

    macros {
        tmux_next_window: tmux_next_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp N>;
            label = "TMUX_NEXT_WINDOW";
        };

        tmux_previous_window: tmux_previous_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp H>;
            label = "TMUX_PREVIOUS_WINDOW";
        };

        tmux_new_window: tmux_new_window {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(A) &kp C>;
            label = "TMUX_NEW_WINDOW";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        qwerty {
            bindings = <
           &kp Q         &kp W         &kp E                 &kp R          &kp T         &kp Y      &kp U            &kp I                 &kp O         &kp P
           &hm_l LGUI A  &hm_l LALT S  &hm_shift_l LSHIFT D  &hm_l LCTRL F  &kp G         &kp H      &hm_r LCTRL J    &hm_shift_r LSHIFT K  &hm_r LALT L  &kp SEMI
&kp LCTRL  &kp Z         &kp X         &kp C                 &kp V          &kp B         &kp N      &kp M            &kp COMMA             &kp DOT       &kp FSLH  &kp APOS
                                       &mo 4                 &lt 2 SPACE    &kp ESCAPE    &kp ENTER  &lt 3 BACKSPACE  &kp LEFT_SHIFT
            >;
        };

        colemak {
            bindings = <
        &kp Q               &kp W           &kp F   &kp P             &kp B     &kp J   &kp L             &kp U           &kp Y    &kp SEMICOLON
        &mt LEFT_COMMAND A  &mt LEFT_ALT R  &kp S   &mt LEFT_SHIFT T  &kp G     &kp M   &mt LEFT_SHIFT N  &mt LEFT_ALT E  &kp I    &kp O
&trans  &kp Z               &kp X           &kp C   &kp D             &kp V     &kp K   &kp H             &kp COMMA       &kp DOT  &kp FSLH       &trans
                                            &trans  &trans            &trans    &trans  &trans            &trans
            >;
        };

        symbols {
            bindings = <
       &kp GRAVE      &kp MINUS  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp EXCLAMATION    &kp ASTERISK  &kp DOLLAR      &kp PERCENT    &kp SQT    &none
       &kp BACKSLASH  &kp PLUS   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AT_SIGN        &kp LEFT      &kp DOWN_ARROW  &kp UP_ARROW   &kp RIGHT  &kp SLASH
&none  &kp PIPE       &kp UNDER  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp HASH           &kp COLON     &kp EQUAL       &kp AMPERSAND  &none      &none      &none
                                 &trans                &trans                 &trans             &trans        &kp BACKSPACE   &none
            >;
        };

        device {
            bindings = <
       &none  &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)    &caps_word  &kp LA(LEFT)  &kp LA(RIGHT)  &none  &tog 1
       &none  &kp C_VOLUME_DOWN     &kp K_MUTE             &kp C_VOLUME_UP     &none                  &none       &kp TAB       &kp LS(TAB)    &none  &to 0
&none  &none  &kp C_PREV            &kp C_PLAY_PAUSE       &kp C_NEXT          &none                  &none       &none         &none          &none  &none   &none
                                    &none                  &none               &none                  &none       &none         &none
            >;
        };

        numbers {
            bindings = <
        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp N5    &kp NUMBER_6  &kp N7         &kp N8        &kp N9        &kp N0
        &kp NUMBER_6  &kp N7        &kp N8        &kp N9        &kp N0    &kp N0        &kp NUMBER_4   &kp N5        &kp NUMBER_6  &trans
&trans  &trans        &trans        &trans        &trans        &trans    &kp COLON     &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                    &trans        &kp SPACE     &trans    &trans        &kp BACKSPACE  &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
